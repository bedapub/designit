% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize.R
\name{optimize_design}
\alias{optimize_design}
\title{Generic optimizer that can be customized by user provided functions for generating shuffles and progressing towards the minimal score}
\usage{
optimize_design(
  batch_container,
  samples = NULL,
  n_shuffle = NULL,
  shuffle_proposal_func = NULL,
  acceptance_func = accept_best_solution,
  aggregate_scores_func = first_score_only,
  max_iter = 10000,
  min_score = NA,
  quiet = FALSE
)
}
\arguments{
\item{batch_container}{An instance of \code{BatchContainer}.}

\item{samples}{A \code{data.frame} with sample information.
Should be \code{NULL} if the \code{BatchContainer} already has samples in it.}

\item{n_shuffle}{Vector of length 1 or larger, defining how many random sample
swaps should be performed in each iteration. If length(n_shuffle)==1,
this sets no limit to the number of iterations. Otherwise, the optimization
stops if the swapping protocol is exhausted.}

\item{shuffle_proposal_func}{A user defined function to propose the next shuffling of samples.
Takes priority over n_shuffle if both are provided. The function is called with
a \link{BatchContainer} \code{bc} and an integer parameter \code{iteration} for the current iteration number,
allowing very flexible shuffling strategies.
The returned function must either return a list with fields \code{src}and \code{dst} (for pairwise sample swapping)
or a numeric vector with a complete re-assigned sample order.}

\item{acceptance_func}{Alternative function to select a new score as the best one.
Defaults to simply taking the overall best score. Max be replaced with an
acceptance function generated by mk_simanneal_acceptance_func() or a user provided function.}

\item{aggregate_scores_func}{A function to aggregate the scores.
By default one is used that just uses the first score.}

\item{max_iter}{Stop optimization after a maximum number of iterations,
independent from other stopping criteria (user defined shuffle proposal or min_score)}

\item{min_score}{If not NA, optimization is stopped as soon as min_score or lower values are reached}

\item{quiet}{If TRUE, suppress non-critical warnings or messages.}
}
\value{
A trace object
}
\description{
Generic optimizer that can be customized by user provided functions for generating shuffles and progressing towards the minimal score
}
