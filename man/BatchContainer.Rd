% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batch_container.R
\name{BatchContainer}
\alias{BatchContainer}
\title{R6 Class representing a batch container.}
\description{
Describes container dimensions and samples to container location assignment.
}
\details{
A typical workflow starts with creating a \code{BatchContainer}. Then
samples can be assigned to locations in that container.
}
\examples{

## ------------------------------------------------
## Method `BatchContainer$new`
## ------------------------------------------------

bc <- BatchContainer$new(
  dimensions = list(
    "plate" = 3,
    "row" = list(values = letters[1:3]),
    "column" = list(values = c(1, 3))
  ),
  exclude = data.frame(plate = 1, row = "a", column = c(1, 3), stringsAsFactors = FALSE)
)

bc
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{scoring_f}}{Scoring functions used for optimization.
Each scoring function should receive a \code{\link[data.table:data.table]{data.table}} with columns from
the samples \link{data.frame}, locations \link{data.frame}, and
\code{.sample_id} column. This function should return a floating
point score value for the assignment. This a list of functions.
Upon assignment a single function will be automatically converted to a list
In the later case each function is called.}

\item{\code{has_samples}}{Returns TRUE if \code{BatchContainer} has samples.}

\item{\code{n_locations}}{Returns number of available locations in a \code{BatchContainer}.
This field cannot be assigned.}

\item{\code{n_excluded}}{Returns number of excluded locations in a \code{BatchContainer}.
This field cannot be assigned.}

\item{\code{n_available}}{Returns number of available locations in a \code{BatchContainer}.
This field cannot be assigned.}

\item{\code{n_dimensions}}{Returns number of dimensions in a \code{BatchContainer}.
This field cannot be assigned.}

\item{\code{dimension_names}}{\link{character} vector with dimension names.
This field cannot be assigned.}

\item{\code{exclude}}{Get or set excluded locations in the \code{BatchContainer}.}

\item{\code{samples}}{Samples in the batch container.
When assigning data.frame should not have column named .sample_id column.}

\item{\code{assignment}}{Sample assignment vector. Should contain NAs for empty locations.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BatchContainer$new()}}
\item \href{#method-get_samples}{\code{BatchContainer$get_samples()}}
\item \href{#method-get_locations}{\code{BatchContainer$get_locations()}}
\item \href{#method-exchange_samples}{\code{BatchContainer$exchange_samples()}}
\item \href{#method-score}{\code{BatchContainer$score()}}
\item \href{#method-print}{\code{BatchContainer$print()}}
\item \href{#method-clone}{\code{BatchContainer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new BatchContainer object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BatchContainer$new(dimensions, exclude = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dimensions}}{A vector or list of dimensions. Every dimension
should have a name. Could be an integer vector of dimensions or
a named list. Every value of a list could be either dimension size
or parameters for \link[=BatchContainerDimension]{BatchContainerDimension$new()}.}

\item{\code{exclude}}{\link{data.frame} with excluded locations of a container.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{bc <- BatchContainer$new(
  dimensions = list(
    "plate" = 3,
    "row" = list(values = letters[1:3]),
    "column" = list(values = c(1, 3))
  ),
  exclude = data.frame(plate = 1, row = "a", column = c(1, 3), stringsAsFactors = FALSE)
)

bc
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_samples"></a>}}
\if{latex}{\out{\hypertarget{method-get_samples}{}}}
\subsection{Method \code{get_samples()}}{
Return table with samples and sample assignment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BatchContainer$get_samples(
  assignment = TRUE,
  include_id = FALSE,
  remove_empty_locations = FALSE,
  as_tibble = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{assignment}}{Return sample assignment. If FALSE, only
samples table is returned, with out batch assignment.}

\item{\code{include_id}}{Keep .sample_id in the table. Use \code{TRUE} for
lower overhead.}

\item{\code{remove_empty_locations}}{Removes empty locations
from the result tibble.}

\item{\code{as_tibble}}{Return \code{\link[tibble:tibble]{tibble}}.
If \code{FALSE} returns \code{\link[data.table:data.table]{data.table}}. This should have
lower overhead, as internally there is a cached \code{\link[data.table:data.table]{data.table}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
table with samples and sample assignment.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_locations"></a>}}
\if{latex}{\out{\hypertarget{method-get_locations}{}}}
\subsection{Method \code{get_locations()}}{
Get a table with all the locations in a \code{BatchContainer}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BatchContainer$get_locations()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{\link[tibble:tibble]{tibble}} with all the available locations.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exchange_samples"></a>}}
\if{latex}{\out{\hypertarget{method-exchange_samples}{}}}
\subsection{Method \code{exchange_samples()}}{
Exchange samples between locations
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BatchContainer$exchange_samples(src, dst)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{src}}{integer vector of source locations}

\item{\code{dst}}{integer vector of destination locations (the same length as \code{src}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{BatchContainer}, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-score"></a>}}
\if{latex}{\out{\hypertarget{method-score}{}}}
\subsection{Method \code{score()}}{
Score current sample assignment,
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BatchContainer$score()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a vector of all scoring functions values.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints information about \code{BatchContainer}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BatchContainer$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{not used.
List of scoring functions.
List of BatchContainerDimension elements.
Tibble with excluded locations.
Tibble with sample information and sample ids.
Vector with assignment of sample ids to locations.
Cached data.table with samples assignment.
Validate sample assignment.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BatchContainer$clone()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
